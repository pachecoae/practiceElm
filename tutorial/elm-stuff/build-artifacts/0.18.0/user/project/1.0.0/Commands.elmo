var _user$project$Commands$respondentEncoder = function (respondent) {
	var attributes = {
		ctor: '::',
		_0: {
			ctor: '_Tuple2',
			_0: 'id',
			_1: _elm_lang$core$Json_Encode$int(respondent.id)
		},
		_1: {
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'name',
				_1: _elm_lang$core$Json_Encode$string(respondent.name)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'age',
					_1: _elm_lang$core$Json_Encode$int(respondent.age)
				},
				_1: {ctor: '[]'}
			}
		}
	};
	return _elm_lang$core$Json_Encode$object(attributes);
};
var _user$project$Commands$saveRespondentUrl = function (respondentId) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'http://localhost:4000/respondents/',
		_elm_lang$core$Basics$toString(respondentId));
};
var _user$project$Commands$respondentDecoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'age',
	_elm_lang$core$Json_Decode$int,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'name',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'id',
			_elm_lang$core$Json_Decode$int,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Models$Respondent))));
var _user$project$Commands$saveRespondentRequest = function (respondent) {
	return _elm_lang$http$Http$request(
		{
			body: _elm_lang$http$Http$jsonBody(
				_user$project$Commands$respondentEncoder(respondent)),
			expect: _elm_lang$http$Http$expectJson(_user$project$Commands$respondentDecoder),
			headers: {ctor: '[]'},
			method: 'PATCH',
			timeout: _elm_lang$core$Maybe$Nothing,
			url: _user$project$Commands$saveRespondentUrl(respondent.id),
			withCredentials: false
		});
};
var _user$project$Commands$saveRespondentCmd = function (respondent) {
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Msgs$OnRespondentSave,
		_user$project$Commands$saveRespondentRequest(respondent));
};
var _user$project$Commands$respondentsDecoder = _elm_lang$core$Json_Decode$list(_user$project$Commands$respondentDecoder);
var _user$project$Commands$fetchRespondentsUrl = 'http://localhost:4000/respondents';
var _user$project$Commands$fetchRespondentGraph = A2(
	_elm_lang$core$Platform_Cmd$map,
	_user$project$Msgs$OnFetchRespondentGraph,
	_krisajenkins$remotedata$RemoteData$sendRequest(
		A2(_elm_lang$http$Http$get, _user$project$Commands$fetchRespondentsUrl, _user$project$Commands$respondentsDecoder)));
var _user$project$Commands$fetchRespondents = A2(
	_elm_lang$core$Platform_Cmd$map,
	_user$project$Msgs$OnFetchRespondents,
	_krisajenkins$remotedata$RemoteData$sendRequest(
		A2(_elm_lang$http$Http$get, _user$project$Commands$fetchRespondentsUrl, _user$project$Commands$respondentsDecoder)));
