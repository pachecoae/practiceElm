var _user$project$Update$updateRespondent = F2(
	function (model, updatedRespondent) {
		var pick = function (currentRespondent) {
			return _elm_lang$core$Native_Utils.eq(updatedRespondent.id, currentRespondent.id) ? updatedRespondent : currentRespondent;
		};
		var updateRespondentList = function (respondents) {
			return A2(_elm_lang$core$List$map, pick, respondents);
		};
		var updatedRespondents = A2(_krisajenkins$remotedata$RemoteData$map, updateRespondentList, model.respondents);
		return _elm_lang$core$Native_Utils.update(
			model,
			{respondents: updatedRespondents});
	});
var _user$project$Update$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'OnFetchRespondents':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{respondents: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'OnFetchRespondentGraph':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{respondents: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'OnLocationChange':
				var newRoute = _user$project$Routing$parseLocation(_p0._0);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{route: newRoute}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ChangeAge':
				var _p1 = _p0._0;
				var updatedRespondent = _elm_lang$core$Native_Utils.update(
					_p1,
					{age: _p1.age + _p0._1});
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Commands$saveRespondentCmd(updatedRespondent)
				};
			default:
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$Update$updateRespondent, model, _p0._0._0),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
